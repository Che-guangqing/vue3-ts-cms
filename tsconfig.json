// https://www.typescriptlang.org/tsconfig
{
  "compilerOptions": {
    // 目标代码 ( ts -> js(es5/6/7) )
    "target": "esnext",
    // 目标代码需要使用得模块方案（commonjs / es module）; umd: 多种模块化
    "module": "esnext",
    // 打开严格检查
    "strict": false,
    // 是否对jsx进行什么处理; preserve: 不转化
    "jsx": "preserve",
    // 辅助导入功能
    "importHelpers": true,
    // 按照node的方式解析模块
    "moduleResolution": "node",
    // 跳过对一些库的类型监测（axios）
    "skipLibCheck": true,
    // export default /  module.export = {} 是否能混合使用
    // es module      /  commonjs
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    // 是否生成映射文件（ts -> js）
    "sourceMap": true,
    // 文件路径解析时，基本url
    "baseUrl": ".",
    // 指定具体要解析使用的类型 默认使用target配置
    "types": [
      "webpack-env"
    ],
    // 路径解析 (类似于webpack alias )
    "paths": {
      "@/*": [
        "src/*"
      ],
      // "components/*": ["src/components/*"]
    },
    "forceConsistentCasingInFileNames": true,
    "useDefineForClassFields": true,
    // 可以指定在项目中可以使用哪些库的类型（Proxy / Window / Document）
    "lib": [
      "esnext",
      "dom",
      "dom.iterable",
      "scripthost"
    ]
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  "exclude": [
    "node_modules"
  ]
}
